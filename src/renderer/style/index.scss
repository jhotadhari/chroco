/* .App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
} */

/* @media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
} */

/* .App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
} */

/* .App-link {
  color: #61dafb;
} */
/*
@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
} */


@import "~bootstrap/scss/mixins/banner";
@include bsBanner("");


@import "./variables/bootstrap";

// scss-docs-start import-stack
// Configuration
@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/variables-dark";
@import "~bootstrap/scss/maps";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/utilities";

// Layout & components
@import "~bootstrap/scss/root";
@import "~bootstrap/scss/reboot";
@import "~bootstrap/scss/type";
@import "~bootstrap/scss/images";
@import "~bootstrap/scss/containers";
@import "~bootstrap/scss/grid";
@import "~bootstrap/scss/tables";
@import "~bootstrap/scss/forms";
@import "~bootstrap/scss/buttons";
@import "~bootstrap/scss/transitions";
@import "~bootstrap/scss/dropdown";
@import "~bootstrap/scss/button-group";
@import "~bootstrap/scss/nav";
@import "~bootstrap/scss/navbar";
@import "~bootstrap/scss/card";
@import "~bootstrap/scss/accordion";
@import "~bootstrap/scss/breadcrumb";
@import "~bootstrap/scss/pagination";
@import "~bootstrap/scss/badge";
@import "~bootstrap/scss/alert";
@import "~bootstrap/scss/progress";
@import "~bootstrap/scss/list-group";
@import "~bootstrap/scss/close";
@import "~bootstrap/scss/toasts";
@import "~bootstrap/scss/modal";
@import "~bootstrap/scss/tooltip";
@import "~bootstrap/scss/popover";
@import "~bootstrap/scss/carousel";
@import "~bootstrap/scss/spinners";
@import "~bootstrap/scss/offcanvas";
@import "~bootstrap/scss/placeholders";

// Helpers
@import "~bootstrap/scss/helpers";

// Utilities
@import "~bootstrap/scss/utilities/api";
// scss-docs-end import-stack



@import "./settings";
@import "./utils";
@import "./timeSlot--filter";
@import "./timeSlots-groups";

:root {
  color-scheme: light dark;
}

@media (prefers-color-scheme: dark) {
  body {
    background: $body-bg-dark;
    color: $body-color-dark;
  }
}

@media (prefers-color-scheme: light) {
  body {
    background: $body-bg;
    color: $body-color;
  }
  .form-switch {
    .form-check-input {
      &:checked {
        --#{$prefix}form-switch-bg: #{escape-svg(url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='3' fill='#{$gray-500}'/></svg>"))};
      }
    }
  }
}

// Remove root outline on focus. It is outlined because it has tabIndex attribute to be able to always listen for keyDown events.
#root > * {
  &, &:focus {
    outline: none !important;
  }
}

[data-bs-theme="light"] {
  .btn {
      --#{$prefix}btn-border-color: #{$gray-700};
      --#{$prefix}btn-hover-border-color: #{$black};
  }
}
[data-bs-theme="dark"] {
  .btn {
      --#{$prefix}btn-border-color: #{$gray-500};
      --#{$prefix}btn-hover-border-color: #{$white};
  }
  .form-control {
    &::placeholder {
      color: $input-placeholder-color-dark;
    }
  }
}

.form-check-input {
  outline: 2px solid transparent !important;
  background-color: transparent !important;
  // &:checked {
  //   border-color: var(--bsgray-500) !important;
  // }
  &.dirty {
    outline-color: var(--bssuccess) !important;
    border-color: var(--bssuccess) !important;
  }
}
.form-control {
  &.invalid {
      border-color: var(--bsdanger) !important;
  }
  &.dirty {
    border-color: var(--bssuccess) !important;
  }
  &.invalid {
    border-color: var(--bsdanger) !important;
  }
}

.timeSlot--duration {
  white-space: nowrap;
  span {
    border: $btn-border-width solid transparent;
    border-radius: $btn-border-radius;
  }
}

.timeSlots-table,
.timeSlots-filters,
.create-timeSlot {
  & > .row {
    margin-top: map-get($spacers, 1 );
    margin-bottom: map-get($spacers, 1 );
    &.spacer {
      margin-bottom: map-get($spacers, 2 );
    }
    &.highlight {
      background-color: rgba(var(--bswarning-rgb), 0.1);
    }
    & > div {
      display: flex;
      align-items: center;
    }
  }
}

.timeSlots-filters {
  & > .row {
    & > div {
      align-items: flex-start;
    }
  }
}

.group-count {
  margin-left: - map-get($spacers, 3 ) + map-get($spacers, 1 );
  margin-right: map-get($spacers, 2 );
}



.rmsc {

  * {
    transition: none !important;
  }
  .dropdown-content > *,
  .dropdown-container,
  .dropdown-heading {
    color: var(--bsbody-color);
  }
  .dropdown-content > *,
  .dropdown-container {
    border: $input-border-width solid $input-border-color;
    border-radius: $input-border-radius;
  }
  .dropdown-content > *,
  .dropdown-heading {
    cursor: pointer !important;
  }
}
.dropdown-content {
  z-index: 99999 !important;
}

.rmsc.dark {
  --rmsc-main: $input-focus-border-color;
  --rmsc-hover: var(--bsbody-bg);
  --rmsc-selected: #1d1915;
  --rmsc-border: $input-border-color;
  --rmsc-gray: var(--bsbody-color);
  --rmsc-bg: var(--bsbody-bg);
  color: var(--bsbody-color);
}

.react-autosuggest {
  &__container {
    &[aria-expanded="false"] {
      .react-autosuggest__suggestions-container {
        display: none;
      }
    }
  }
  &__suggestions-container {
    width: calc(100% - var(--bsgutter-x) * 1);
  }

  &__suggestions-list {
    list-style: none;
  }
  &__suggestion {
    cursor: pointer;
    padding-left: 1rem;
    padding-top: 0.15rem;
    margin-left: -2rem;
    &:last-child {
      margin-bottom: -1rem;
    }
    &--highlighted {
      @media (prefers-color-scheme: dark) {
        background-color: var(--bshighlight-bg-dark);
      }
      @media (prefers-color-scheme: light) {
        background-color: var(--bshighlight-bg);
      }
    }
  }
}



.timeSlot--filter {
  min-height: 84px;
}
.create-timeSlot {
  padding-bottom: 39px;
}




.timeslot,
.timeslot-group {
  &:hover {
    background-color: rgba(var(--bswarning-rgb), 0.1);
  }
}

.drag-handle {
	.bi {
		@include transition( $transition-base );
	}
	&:hover {
		.bi {
			transform: scale( 1.25 );
		}
	}
}
